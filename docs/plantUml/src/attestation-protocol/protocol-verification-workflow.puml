/*
 *  Copyright (C) 2019  Attila Aldemir <a_aldemir@hotmail.de>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */ 
 
@startuml


participant "Verifier" as VERI
participant "Attested Account" as ATTD
participant "New Attested Account" as NATTD
participant "Attestor" as ATTE


== Precondition ==

-> VERI: received data object


...
== Data Verification ==

VERI -> VERI: decode token
VERI -> VERI: check validity of token
VERI -> VERI: check validity of token\ncreator account

group optional
    VERI -> VERI: check data object
end
|||


== Trust Chain Verification ==

VERI -> ATTD: get token creator account\ndata fields
|||

loop
    VERI -> VERI: check formal validity of\ndata fields

    group optional
        VERI -> VERI: check entity
    end

    alt is data object creator account 
        VERI -> VERI: check if account state is active
    else
        loop as long as account state is deprecated
            VERI -> NATTD: get data fields
            VERI -> VERI: check formal validity of data fields
            VERI -> VERI: check entity type
            
            group optional
                VERI -> VERI: check entity
            end
            
            VERI -> VERI: treat new attested account as attested account
        end
        VERI -> VERI: check if account state is active
    end

    VERI -> VERI: check if entity type is root
    alt type is root
        VERI -> VERI: check if account is known
        VERI -> VERI: check if property was self set
        VERI -> VERI: break loop and return success
    else
        alt is not data object creator account
            VERI -> VERI: check if entity type is not leaf
        end
    end
    VERI -> ATTE: get data fields
    VERI -> VERI: treat attestor as attested account
end
|||

@enduml